% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/similar-pkgs.R
\name{pkgmatch_similar_pkgs}
\alias{pkgmatch_similar_pkgs}
\title{Find R packages matching an input of either text or another package}
\usage{
pkgmatch_similar_pkgs(
  input,
  corpus = NULL,
  embeddings = NULL,
  idfs = NULL,
  input_is_code = text_is_code(input),
  lm_proportion = 0.5,
  n = 5L,
  browse = FALSE
)
}
\arguments{
\item{input}{Either a path to local source code of an R package, or a text
string.}

\item{corpus}{Must be specified as one of "ropensci" or "cran". If
\code{embeddings} or \code{idfs} parameters are not specified, they are automatically
downloaded for the corpus specified by this parameter. The function will
then return the most similar package from the specified corpus. Note that
calculations will \code{corpus = "cran"} will generally take longer, because the
corpus is much larger.}

\item{embeddings}{Large Language Model embeddings for all rOpenSci packages,
generated from \link{pkgmatch_embeddings_from_pkgs}. If not provided,
pre-generated embeddings will be downloaded and stored in a local cache
directory.}

\item{idfs}{Inverse Document Frequency tables for all rOpenSci packages,
generated from \link{pkgmatch_bm25}. If not provided, pre-generated IDF
tables will be downloaded and stored in a local cache directory.}

\item{input_is_code}{A binary flag indicating whether \code{input} is code or
plain text. Ignored if \code{input} is path to a local package; otherwise can be
used to force appropriate interpretation if input type.}

\item{lm_proportion}{A value between 0 and 1 to control the relative
contributions of results from Language Models ("LMs") versus results from
traditional token-frequency models. Final rankings are generated by
combining these two kinds of results, so that \code{lm_proportion = 0} will
return results from token frequency analyses only, while \code{lm_proportion = 1} will return results from LMs only.}

\item{n}{When the result of this function is printed to screen, the top \code{n}
packages will be displayed.}

\item{browse}{If \code{TRUE}, automatically open webpages of the top \code{n} matches
in local browser.}
}
\value{
A \code{data.frame} with a "package" column naming packages, and one or
more columns of package ranks in terms of text similarity and, if \code{input} is
a local path to an entire R package, of similarity in code structure. As
described above, the default \code{print} method prints package names only. To
see full result, use \code{as.data.frame()}.
}
\description{
This function accepts as \code{input} either a text description, or
a path to a local R package, and returns information on R packages which
best match that input. Matches are found from within a specified "corpus",
currently all packages from either \href{https://ropensci.org/packages}{rOpenSci's package suite}, or from
\href{https://cran.r-project.org}{CRAN}.

The returned object has a default \code{print} method which prints the best 5
matches directly to the screen, yet returns information on all packages
within the specified corpus. This information is in the form of a
\code{data.frame}, with one column for the package name, and one or more
additional columns of integer ranks for each package. There is also a \code{head}
method to print the first few entries of these full data (default \code{n = 5}).
To see all data, use \code{as.data.frame()}.

Ranks are obtained from scores derived from:
\itemize{
\item Cosine similarities between Language Model (LM) embeddings for the
\code{input}, and corresponding embeddings for the specified corpus. \item \href{https://en.wikipedia.org/wiki/Okapi_BM25}{"Best Match 25" (BM25)} scores based on
document token frequencies.
}

Ranks for text matches are generally obtained from packages both including
and excluding function descriptions as part of the package text. This
results in up to four scores for each input. These scores are then combined
to a final ranking using the \href{https://plg.uwaterloo.ca/~gvcormac/cormacksigir09-rrf.pdf}{Reciprocal Rank Fusion (RRF) algorithm}. The
additional parameter of \code{lm_proportion} determines the extent to which the
final ranking weights the LM versus BM25 components.

Finally, all components of this function are locally cached for each call
(by the \pkg{memoise} package), so additional calls to this function with
the same \code{input} and \code{corpus} should be much faster than initial calls. This
means the effect of changing \code{lm_proportion} can easily be examined by
simply repeating calls to this function.
}
\note{
The first time this function is run without passing either
\code{embeddings} or \code{idfs}, required values will be automatically downloaded and
stored in a locally persistent cache directory. Especially for the "cran"
corpus, this downloading may take quite some time.
}
\examples{
\dontrun{
input <- "Download open spatial data from NASA"
p <- pkgmatch_similar_pkgs (input)
p # Default print method, lists 5 best matching packages
head (p) # Shows first 5 rows of full `data.frame` object
# This second call will be much faster than first call:
p2 <- pkgmatch_similar_pkgs (input, lm_proportion = 0.25)
}
}
\seealso{
input_is_code

Other main: 
\code{\link{pkgmatch_similar_fns}()}
}
\concept{main}
