% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/embeddings.R
\name{pkgmatch_embeddings_from_pkgs}
\alias{pkgmatch_embeddings_from_pkgs}
\title{Return raw embeddings from package text and function definitions.}
\usage{
pkgmatch_embeddings_from_pkgs(
  packages = NULL,
  n_chunks = 5L,
  functions_only = FALSE
)
}
\arguments{
\item{packages}{A vector of either names of installed packages, or local
paths to directories containing R packages.}

\item{n_chunks}{Number of randomly permuted chunks of input text to use to
generate average embeddings. Values should generally be > 1, because the
text of many packages exceeds the context window for the language models,
and so permutations ensure that all text is captured in resultant
embeddings. Note, however, that computation times scale linearly with this
value.}

\item{functions_only}{If \code{TRUE}, calculate embeddings for function
descriptions only. This is intended to generate a separate set of embeddings
which can then be used to match plain-text queries of functions, rather than
entire packages.}
}
\value{
If \code{!functions_only}, a list of two matrices of embeddings: one for
the text descriptions of the specified packages, including individual
descriptions of all package functions, and one for the entire code base. For
\code{functions_only}, a single matrix of embeddings for all function
descriptions.
}
\description{
This function accepts a vector of either names of installed
packages, or paths to local source code directories, and calculates language
model (LM) embeddings for both text descriptions within the package
(documentation, including of functions), and for the entire code base.
Embeddings may also be calculating separately for all function descriptions.

The embeddings are currently retrieved from a local 'ollama' server
(\url{https://ollama.com}) running Jina AI embeddings
(\url{https://ollama.com/jina/jina-embeddings-v2-base-en} for text, and
\url{https://ollama.com/unclemusclez/jina-embeddings-v2-base-code} for code).
}
\note{
Although it is technically much faster to perform the extraction of
text and code in parallel, doing so generates unpredictable errors in
extracting tarballs, which frequently cause the whole process to crash. The
only way to safely ensure that all tarballs are successfully extracted and
code parsed it to run this single-threaded.
}
\examples{
packages <- "curl"
emb_fns <- pkgmatch_embeddings_from_pkgs (packages, functions_only = TRUE)
colnames (emb_fns) # All functions the package
emb_pkg <- pkgmatch_embeddings_from_pkgs (packages, functions_only = FALSE)
names (emb_pkg)
colnames (emb_pkg$text_with_fns) # "curl"
}
\seealso{
Other embeddings: 
\code{\link{pkgmatch_embeddings_from_text}()}
}
\concept{embeddings}
