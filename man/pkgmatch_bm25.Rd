% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bm25.R
\name{pkgmatch_bm25}
\alias{pkgmatch_bm25}
\title{The "Best Matching 25" (BM25) ranking function.}
\usage{
pkgmatch_bm25(input, txt = NULL, idfs = NULL, corpus = NULL)
}
\arguments{
\item{input}{A single character string to match against the second parameter
of all input documents.}

\item{txt}{An optional list of input documents. If not specified, data will
be loaded as specified by the \code{corpus} parameter.}

\item{idfs}{Optional list of Inverse Document Frequency weightings generated
by the internal \code{bm25_idf} function. If not specified, values for the
rOpenSci corpus will be automatically downloaded and used.}

\item{corpus}{If \code{txt} is not specified, data for nominated corpus will be
downloaded to local cache directory, and BM25 values calculated against
those. Must be one of "ropensci", "ropensci-fns", or "cran". Note that the
"ropensci-fns" corpus contains entries for every single function of every
rOpenSci package, and the resulting BM25 values can be used to determine the
best-matching function. The other two corpora are package-based, and the
results can be used to find the best-matching package.}
}
\value{
A \code{data.frame} of package names and 'BM25' measures against text
from whole packages both with and without function descriptions.
}
\description{
BM25 values match single inputs to document corpora by
weighting terms by their inverse frequencies, so that relatively rare words
contribute more to match scores than common words. For each input, the BM25
value is the sum of relative frequencies of each term in the input
multiplied by the Inverse Document Frequency (IDF) of that term in the
entire corpus. See the Wikipedia page at
\url{https://en.wikipedia.org/wiki/Okapi_BM25} for further details.
}
\examples{
# The following function simulates remote data in temporary directory, to
# enable package usage without downloading. Do not run for normal usage.
generate_pkgmatch_example_data ()

pkgmatch_bm25 (input = "curl", corpus = "cran")
# Or pre-load document-frequency weightings and pass those:
idfs <- pkgmatch_load_data ("idfs", corpus = "cran", fns = FALSE)
pkgmatch_bm25 (input, corpus = "cran", idfs = idfs)
}
\seealso{
Other bm25: 
\code{\link{pkgmatch_bm25_fn_calls}()}
}
\concept{bm25}
